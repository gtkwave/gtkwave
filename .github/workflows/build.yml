name: 'build'

on:
  push:
  schedule:
    - cron: '0 0 * * *'

jobs:

  msys2:
    runs-on: windows-latest
    strategy:
        fail-fast: false
        max-parallel: 2
        matrix:
          target: [
            { msys2: MINGW32, arch: i686 },
            { msys2: MINGW64, arch: x86_64}
          ]
          gtk: [ 2, 3 ]
    continue-on-error: true
    defaults:
      run:
        shell: msys2 {0}
    env:
      MINGW_INSTALLS: ${{ matrix.target.msys2 }}
    steps:

    - run: git config --global core.autocrlf input
      shell: bash

    - uses: actions/checkout@v2

    - uses: msys2/setup-msys2@v2
      with:
        update: true
        install: >
          base-devel
          git
          mingw-w64-${{ matrix.target.arch }}-toolchain
        msystem: ${{ matrix.target.msys2 }}

    - name: Build package
      working-directory: MSYS2/gtk${{ matrix.gtk }}
      run: |
        tries=0
        # Try building three times due to the arbitrary 'Bad address' error
        while [ $tries -lt 3 ]; do
          makepkg-mingw --noconfirm --noprogressbar -sCLfc && break || tries=$((tries+1))
        done

    - name: Install and create standalone package
      working-directory: ./MSYS2/gtk${{ matrix.gtk }}
      run: |
        pacman -U --noconfirm mingw-*gtkwave*.pkg.tar.zst
        mv mingw-*gtkwave*.pkg.tar.zst ../../
        ../standalone_pkg.sh

    - uses: actions/upload-artifact@v2
      with:
        path: |
          mingw-*gtkwave*.pkg.tar.zst
          gtkwave_*_standalone.tgz


  macos:
    runs-on: macOS-10.15
    steps:

    - uses: actions/checkout@v2

    - name: Dependencies (brew)
      run: |
        brew install gtk+3
        brew install gtk-mac-integration
        brew install adwaita-icon-theme
        brew install tcl
        brew install xz

    - name: Build
      run: |
        cd gtkwave3-gtk3
        export PKG_CONFIG_PATH=$(brew --prefix)/lib/pkgconfig
        CPPFLAGS="-I$(brew --prefix)/include" LDFLAGS="-L$(brew --prefix)/lib" ./configure --enable-gtk3 --with-tcl=$(brew --prefix)/opt/tcl-tk/lib --with-tk=$(brew --prefix)/opt/tcl-tk/lib


  nightly:
    if: github.ref == 'refs/heads/master' && github.event_name != 'pull_request'
    needs: [ msys2 ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v2
    - uses: eine/tip@master
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: 'nightly'
        rm: true
        files: artifact/*
