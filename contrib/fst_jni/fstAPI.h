/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class fstAPI */

#ifndef _Included_fstAPI
#define _Included_fstAPI
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     fstAPI
 * Method:    fstWriterCreate
 * Signature: (Ljava/lang/String;Z)J
 */
JNIEXPORT jlong JNICALL Java_fstAPI_fstWriterCreate
  (JNIEnv *, jobject, jstring, jboolean);

/*
 * Class:     fstAPI
 * Method:    fstWriterClose
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fstAPI_fstWriterClose
  (JNIEnv *, jobject, jlong);

/*
 * Class:     fstAPI
 * Method:    fstWriterGetFseekFailed
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_fstAPI_fstWriterGetFseekFailed
  (JNIEnv *, jobject, jlong);

/*
 * Class:     fstAPI
 * Method:    fstWriterGetDumpSizeLimitReached
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_fstAPI_fstWriterGetDumpSizeLimitReached
  (JNIEnv *, jobject, jlong);

/*
 * Class:     fstAPI
 * Method:    fstWriterFlushContext
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fstAPI_fstWriterFlushContext
  (JNIEnv *, jobject, jlong);

/*
 * Class:     fstAPI
 * Method:    fstWriterSetUpscope
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fstAPI_fstWriterSetUpscope
  (JNIEnv *, jobject, jlong);

/*
 * Class:     fstAPI
 * Method:    fstWriterSetAttrEnd
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fstAPI_fstWriterSetAttrEnd
  (JNIEnv *, jobject, jlong);

/*
 * Class:     fstAPI
 * Method:    fstWriterSetPackType
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_fstAPI_fstWriterSetPackType
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     fstAPI
 * Method:    fstWriterSetFileType
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_fstAPI_fstWriterSetFileType
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     fstAPI
 * Method:    fstWriterSetRepackOnClose
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_fstAPI_fstWriterSetRepackOnClose
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     fstAPI
 * Method:    fstWriterSetParallelMode
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_fstAPI_fstWriterSetParallelMode
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     fstAPI
 * Method:    fstWriterSetTimescale
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_fstAPI_fstWriterSetTimescale
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     fstAPI
 * Method:    fstWriterSetTimezero
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_fstAPI_fstWriterSetTimezero
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     fstAPI
 * Method:    fstWriterSetDumpSizeLimit
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_fstAPI_fstWriterSetDumpSizeLimit
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     fstAPI
 * Method:    fstWriterEmitDumpActive
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_fstAPI_fstWriterEmitDumpActive
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     fstAPI
 * Method:    fstWriterEmitTimeChange
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_fstAPI_fstWriterEmitTimeChange
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     fstAPI
 * Method:    fstWriterSetDate
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_fstAPI_fstWriterSetDate
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     fstAPI
 * Method:    fstWriterSetVersion
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_fstAPI_fstWriterSetVersion
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     fstAPI
 * Method:    fstWriterSetComment
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_fstAPI_fstWriterSetComment
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     fstAPI
 * Method:    fstWriterSetEnvVar
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_fstAPI_fstWriterSetEnvVar
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     fstAPI
 * Method:    fstWriterSetTimescaleFromString
 * Signature: (JLjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_fstAPI_fstWriterSetTimescaleFromString
  (JNIEnv *, jobject, jlong, jstring);

/*
 * Class:     fstAPI
 * Method:    fstWriterCreateVar
 * Signature: (JIIILjava/lang/String;I)I
 */
JNIEXPORT jint JNICALL Java_fstAPI_fstWriterCreateVar
  (JNIEnv *, jobject, jlong, jint, jint, jint, jstring, jint);

/*
 * Class:     fstAPI
 * Method:    fstWriterCreateVar2
 * Signature: (JIIILjava/lang/String;ILjava/lang/String;II)I
 */
JNIEXPORT jint JNICALL Java_fstAPI_fstWriterCreateVar2
  (JNIEnv *, jobject, jlong, jint, jint, jint, jstring, jint, jstring, jint, jint);

/*
 * Class:     fstAPI
 * Method:    fstWriterSetSourceStem
 * Signature: (JLjava/lang/String;IZ)V
 */
JNIEXPORT void JNICALL Java_fstAPI_fstWriterSetSourceStem
  (JNIEnv *, jobject, jlong, jstring, jint, jboolean);

/*
 * Class:     fstAPI
 * Method:    fstWriterSetSourceInstantiationStem
 * Signature: (JLjava/lang/String;IZ)V
 */
JNIEXPORT void JNICALL Java_fstAPI_fstWriterSetSourceInstantiationStem
  (JNIEnv *, jobject, jlong, jstring, jint, jboolean);

/*
 * Class:     fstAPI
 * Method:    fstWriterSetScope
 * Signature: (JILjava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_fstAPI_fstWriterSetScope
  (JNIEnv *, jobject, jlong, jint, jstring, jstring);

/*
 * Class:     fstAPI
 * Method:    fstWriterEmitVariableLengthValueChange
 * Signature: (JILjava/lang/String;I)V
 */
JNIEXPORT void JNICALL Java_fstAPI_fstWriterEmitVariableLengthValueChange
  (JNIEnv *, jobject, jlong, jint, jstring, jint);

/*
 * Class:     fstAPI
 * Method:    fstWriterSetAttrBegin
 * Signature: (JIILjava/lang/String;J)V
 */
JNIEXPORT void JNICALL Java_fstAPI_fstWriterSetAttrBegin
  (JNIEnv *, jobject, jlong, jint, jint, jstring, jlong);

/*
 * Class:     fstAPI
 * Method:    fstWriterEmitValueChange
 * Signature: (JILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_fstAPI_fstWriterEmitValueChange__JILjava_lang_String_2
  (JNIEnv *, jobject, jlong, jint, jstring);

/*
 * Class:     fstAPI
 * Method:    fstWriterEmitValueChange
 * Signature: (JID)V
 */
JNIEXPORT void JNICALL Java_fstAPI_fstWriterEmitValueChange__JID
  (JNIEnv *, jobject, jlong, jint, jdouble);

/*
 * Class:     fstAPI
 * Method:    fstReaderOpen
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_fstAPI_fstReaderOpen
  (JNIEnv *, jobject, jstring);

/*
 * Class:     fstAPI
 * Method:    fstReaderOpenForUtilitiesOnly
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_fstAPI_fstReaderOpenForUtilitiesOnly
  (JNIEnv *, jobject);

/*
 * Class:     fstAPI
 * Method:    fstReaderClose
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fstAPI_fstReaderClose
  (JNIEnv *, jobject, jlong);

/*
 * Class:     fstAPI
 * Method:    fstReaderIterateHierRewind
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_fstAPI_fstReaderIterateHierRewind
  (JNIEnv *, jobject, jlong);

/*
 * Class:     fstAPI
 * Method:    fstReaderResetScope
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fstAPI_fstReaderResetScope
  (JNIEnv *, jobject, jlong);

/*
 * Class:     fstAPI
 * Method:    fstReaderGetCurrentScopeLen
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fstAPI_fstReaderGetCurrentScopeLen
  (JNIEnv *, jobject, jlong);

/*
 * Class:     fstAPI
 * Method:    fstReaderGetFileType
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fstAPI_fstReaderGetFileType
  (JNIEnv *, jobject, jlong);

/*
 * Class:     fstAPI
 * Method:    fstReaderGetTimezero
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fstAPI_fstReaderGetTimezero
  (JNIEnv *, jobject, jlong);

/*
 * Class:     fstAPI
 * Method:    fstReaderGetStartTime
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fstAPI_fstReaderGetStartTime
  (JNIEnv *, jobject, jlong);

/*
 * Class:     fstAPI
 * Method:    fstReaderGetEndTime
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fstAPI_fstReaderGetEndTime
  (JNIEnv *, jobject, jlong);

/*
 * Class:     fstAPI
 * Method:    fstReaderGetMemoryUsedByWriter
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fstAPI_fstReaderGetMemoryUsedByWriter
  (JNIEnv *, jobject, jlong);

/*
 * Class:     fstAPI
 * Method:    fstReaderGetScopeCount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fstAPI_fstReaderGetScopeCount
  (JNIEnv *, jobject, jlong);

/*
 * Class:     fstAPI
 * Method:    fstReaderGetVarCount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fstAPI_fstReaderGetVarCount
  (JNIEnv *, jobject, jlong);

/*
 * Class:     fstAPI
 * Method:    fstReaderGetMaxHandle
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fstAPI_fstReaderGetMaxHandle
  (JNIEnv *, jobject, jlong);

/*
 * Class:     fstAPI
 * Method:    fstReaderGetAliasCount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fstAPI_fstReaderGetAliasCount
  (JNIEnv *, jobject, jlong);

/*
 * Class:     fstAPI
 * Method:    fstReaderGetValueChangeSectionCount
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_fstAPI_fstReaderGetValueChangeSectionCount
  (JNIEnv *, jobject, jlong);

/*
 * Class:     fstAPI
 * Method:    fstReaderGetFseekFailed
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_fstAPI_fstReaderGetFseekFailed
  (JNIEnv *, jobject, jlong);

/*
 * Class:     fstAPI
 * Method:    fstReaderSetUnlimitedTimeRange
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fstAPI_fstReaderSetUnlimitedTimeRange
  (JNIEnv *, jobject, jlong);

/*
 * Class:     fstAPI
 * Method:    fstReaderSetLimitTimeRange
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_fstAPI_fstReaderSetLimitTimeRange
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     fstAPI
 * Method:    fstReaderSetVcdExtensions
 * Signature: (JZ)V
 */
JNIEXPORT void JNICALL Java_fstAPI_fstReaderSetVcdExtensions
  (JNIEnv *, jobject, jlong, jboolean);

/*
 * Class:     fstAPI
 * Method:    fstReaderGetNumberDumpActivityChanges
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fstAPI_fstReaderGetNumberDumpActivityChanges
  (JNIEnv *, jobject, jlong);

/*
 * Class:     fstAPI
 * Method:    fstReaderGetDumpActivityChangeTime
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_fstAPI_fstReaderGetDumpActivityChangeTime
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     fstAPI
 * Method:    fstReaderGetFacProcessMask
 * Signature: (JI)Z
 */
JNIEXPORT jboolean JNICALL Java_fstAPI_fstReaderGetFacProcessMask
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     fstAPI
 * Method:    fstReaderSetFacProcessMask
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_fstAPI_fstReaderSetFacProcessMask
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     fstAPI
 * Method:    fstReaderClrFacProcessMask
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_fstAPI_fstReaderClrFacProcessMask
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     fstAPI
 * Method:    fstReaderSetFacProcessMaskAll
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fstAPI_fstReaderSetFacProcessMaskAll
  (JNIEnv *, jobject, jlong);

/*
 * Class:     fstAPI
 * Method:    fstReaderClrFacProcessMaskAll
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_fstAPI_fstReaderClrFacProcessMaskAll
  (JNIEnv *, jobject, jlong);

/*
 * Class:     fstAPI
 * Method:    fstReaderGetVersionString
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fstAPI_fstReaderGetVersionString
  (JNIEnv *, jobject, jlong);

/*
 * Class:     fstAPI
 * Method:    fstReaderGetDateString
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fstAPI_fstReaderGetDateString
  (JNIEnv *, jobject, jlong);

/*
 * Class:     fstAPI
 * Method:    fstReaderPopScope
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fstAPI_fstReaderPopScope
  (JNIEnv *, jobject, jlong);

/*
 * Class:     fstAPI
 * Method:    fstReaderGetCurrentFlatScope
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fstAPI_fstReaderGetCurrentFlatScope
  (JNIEnv *, jobject, jlong);

/*
 * Class:     fstAPI
 * Method:    fstReaderGetCurrentScopeUserInfo
 * Signature: (J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fstAPI_fstReaderGetCurrentScopeUserInfo
  (JNIEnv *, jobject, jlong);

/*
 * Class:     fstAPI
 * Method:    fstReaderPushScope
 * Signature: (JLjava/lang/String;J)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fstAPI_fstReaderPushScope
  (JNIEnv *, jobject, jlong, jstring, jlong);

/*
 * Class:     fstAPI
 * Method:    fstReaderGetTimescale
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_fstAPI_fstReaderGetTimescale
  (JNIEnv *, jobject, jlong);

/*
 * Class:     fstAPI
 * Method:    fstReaderGetDumpActivityChangeValue
 * Signature: (JI)Z
 */
JNIEXPORT jboolean JNICALL Java_fstAPI_fstReaderGetDumpActivityChangeValue
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     fstAPI
 * Method:    fstReaderGetValueFromHandleAtTime
 * Signature: (JJI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fstAPI_fstReaderGetValueFromHandleAtTime
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     fstAPI
 * Method:    fstReaderIterateHier
 * Signature: (JLfstHier;)V
 */
JNIEXPORT void JNICALL Java_fstAPI_fstReaderIterateHier
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     fstAPI
 * Method:    fstReaderIterBlocks
 * Signature: (JLjava/lang/Object;)I
 */
JNIEXPORT jint JNICALL Java_fstAPI_fstReaderIterBlocks
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     fstAPI
 * Method:    fstUtilityBinToEsc
 * Signature: ([BI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_fstAPI_fstUtilityBinToEsc
  (JNIEnv *, jclass, jbyteArray, jint);

/*
 * Class:     fstAPI
 * Method:    fstUtilityEscToBin
 * Signature: (Ljava/lang/String;)[B
 */
JNIEXPORT jbyteArray JNICALL Java_fstAPI_fstUtilityEscToBin
  (JNIEnv *, jclass, jstring);

#ifdef __cplusplus
}
#endif
#endif
